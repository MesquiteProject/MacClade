unit About;{еееееееееееееееееееееее}{MacClade Source Code}{Copyright Wayne P. Maddison and David R. Maddison 1986-1991}{No portions of the source code of MacClade can be used in any program,}{or published in any form, without the express written consent of }{Wayne or David Maddison}{еееееееееееееееееееееее}interface	uses		QuickDraw,  Dialogs, Types, Events, QuickDrawText, OSUtils, TextUtils, menus, Windows, 		Sound, TextEdit, QuickDrawText,Lists, ToolUtils, Memory, Fonts, Resources, Scrap,  		Globals, SetLibInterface, UtilLibInterface,  MemoryUtil, CarbonUtil, SimpleUtil, WindowUtil, ErrorUtil, EventUtil, GenUtil, StrUtil, 		Speak, BoxUtil;	procedure DrawOpenAbout (theDialog: DialogPtr);	procedure DoAbout;	{еееееееееееееееееееееее}implementation {е$S About}{-----------------------------------------------------------------------------}	procedure DrawOpenAbout (theDialog: DialogPtr);		var			box,clipbox: rect;			oldfont, oldsize: integer;			ds: str255;			left,top,j: integer;	begin				oldfont := QDThePortTextFont;		oldsize := QDThePortTextSize;		textfont(0);		textsize(12);{$IFC RELEASEVERSION}{$IFC DEMO}		ds := concat('Demo Version ', VERSION);{$ELSEC}{$IFC EDUCATIONAL}		ds := concat('Classroom Version ', VERSION);{$ELSEC}		ds := concat('Release Version ', VERSION);{$ENDC}{$ENDC}{$ELSEC}{$IFC EDUCATIONAL}		ds := concat('Classroom Test Version ', testVersion);{$ELSEC}		ds := concat('Test Version ', testVersion);{$ENDC}{$ENDC}		box := GetDLOGItemBox(theDialog, 6);		TETextBox(Pointer(ord4(@ds) + 1), length(ds), box, teJustCenter);{$IFC POWERPC}		//TextFace([italic]);{$IFC CARBON}		ForeColor(greenColor);		ds := 'for OS X';{$ELSEC}		ForeColor(redColor);		ds := 'PowerPC';{$ENDC}{$ELSEC}		ForeColor(blueColor);		ds := '68K';{$ENDC}		CallWaitNextEventForDrawing;		OffSetRect(box,0,20);		TETextBox(Pointer(ord4(@ds) + 1), length(ds), box, teJustCenter);		ForeColor(blackColor);		TextFace([]);		{ds := concat('David R. Maddison',chr(13),'and Wayne P. Maddison', chr(13), 'й 1998');		box := GetDLOGItemBox(theDialog, 4);		TETextBox(Pointer(ord4(@ds) + 1), length(ds), box, teJustCenter);}		CallWaitNextEventForDrawing;				ForeColor(blueColor);		textfont(kFontIDGeneva);		textsize(9);		ds := UserStamp(true, false, true);		box := GetDLOGItemBox(theDialog, 5);		{box.left := 0;		box.right := WindowPortRect(myGetWindowPtrForDialog(theDialog)).right;}		TETextBox(Pointer(ord4(@ds) + 1), length(ds), box, teJustLeft);		ForeColor(blackColor);		textfont(0);		textsize(12);		CallWaitNextEventForDrawing;			end;{-----------------------------------------------------------------------------}	procedure AboutInfo (theDialog: DialogPtr; itemNo: Integer);		const			linepos = 116;		var			oldfont, oldsize, j: integer;			droprect, box, boxE: rect;			ds: str255;	begin{$IFC FALSE}{$IFC DEMO}{ееееееееееееееееееееееееее}		ds := concat('Demo Version ', VERSION);{ееееееееееееееееееееееееее}{$ELSEC}{$IFC NOT RELEASEVERSION}{ееееееееееееееееееееееееее}		ds := concat('Test Version ', VERSION);{ееееееееееееееееееееееееее}{$ELSEC}{$IFC EDUCATIONAL}{ееееееееееееееееееееееееее}		ds := concat('Classroom Version ', VERSION);{ееееееееееееееееееееееееее}{$ELSEC}{ееееееееееееееееееееееееее}		ds := concat('Release Version ', VERSION);{ееееееееееееееееееееееееее}{$ENDC}{$ENDC}{$ENDC}		FrameButton(theDialog, 1);		oldfont := QDThePortTextFont;		oldsize := QDThePortTextSize;		textfont(0);		textsize(12);	//	SetRect(BoxE, 0, 60, WindowPortRect(myGetWindowPtrForDialog(theDialog)).right, 120);		boxE := GetDLOGItemBox(theDialog, 6);{ForeColor(blueColor);}		TETextBox(Pointer(ord4(@ds) + 1), length(ds), boxE, teJustLeft);		ForeColor(blackColor);{		moveto(WindowPortRect(myGetWindowPtrForDialog(theDialog)).left + 15, linepos);		Lineto(WindowPortRect(myGetWindowPtrForDialog(theDialog)).right - 15, linepos);		moveto(WindowPortRect(myGetWindowPtrForDialog(theDialog)).left + 15, linepos + 2);		Lineto(WindowPortRect(myGetWindowPtrForDialog(theDialog)).right - 15, linepos + 2);}		textfont(kFontIDGeneva);		textsize(9);		ds := UserStamp(true, false, true);		boxE := GetDLOGItemBox(theDialog, 8);		ForeColor(blueColor);		TETextBox(Pointer(ord4(@ds) + 1), length(ds), boxE, teJustCenter);		ForeColor(blackColor);		textfont(oldfont);		textsize(oldsize);				{$ENDC}				FrameButton(theDialog, 1);		DrawOpenAbout(theDialog);	end;{-----------------------------------------------------------------------------}	procedure Credits (theDialog: DialogPtr; itemNo: Integer);	begin		FrameButton(theDialog, 1);		DrawResourceTEXT(theDialog, 4, 22678);	end;{-----------------------------------------------------------------------------}	procedure MoreInfo (theDialog: DialogPtr; itemNo: Integer);		var			oldfont, oldsize, place: integer;			boxE: rect;			ds: str255;			halfw: integer;	begin		halfw := WindowPortRect(myGetWindowPtrForDialog(theDialog)).right div 2;		FrameButton(theDialog, 1);		oldfont := QDThePortTextFont;		oldsize := QDThePortTextSize;		textfont(kFontIDGeneva);		textsize(9);		ds := concat('For technical information about MacClade,', chr(13), 'contact David Maddison or Wayne Maddison at: ');		SetRect(BoxE, 20, 10, WindowPortRect(myGetWindowPtrForDialog(theDialog)).right, 45);		TETextBox(Pointer(ord4(@ds) + 1), length(ds), boxE, teJustleft);		ForeColor(blueColor);		ds := concat('David Maddison', chr(13), 'Department of Zoology', chr(13), 'Oregon State University', chr(13), 'Corvallis, OR, 97331  U.S.A.');		SetRect(BoxE, 25, 45, halfW-10, 140);		TETextBox(Pointer(ord4(@ds) + 1), length(ds), boxE, teJustleft);		ds := concat('Wayne Maddison', chr(13), 'Departments of Zoology and Botany', chr(13), 'University of British Columbia', chr(13), 'Vancouver, BC   V6T 1Z4   Canada');		SetRect(BoxE, halfW + 5, 45, 2 * halfW, 120);		TETextBox(Pointer(ord4(@ds) + 1), length(ds), boxE, teJustleft);				ds := concat('e-mail:  clade@arizona.edu', chr(13), 'WWW:  http://macclade.org');		SetRect(BoxE, 0, 98, WindowPortRect(myGetWindowPtrForDialog(theDialog)).right, 143);		TETextBox(Pointer(ord4(@ds) + 1), length(ds), boxE, teJustCenter);		ForeColor(blackColor);		DrawResourceTEXT(theDialog, 2, 11260);		ForeColor(greenColor);		DrawResourceTEXT(theDialog, 5, 132);   {Sinauer address}		DrawResourceTEXT(theDialog, 6, 133);   {v3.05: Sinauer phones & e-mail}		ForeColor(blackColor);		textfont(oldfont);		textsize(oldsize);	end;{-----------------------------------------------------------------------------}	procedure DoEggAbout;		var			tempP: WindowPtr;			theDialog: DialogPtr;			tempH: Handle;			itemtype: integer;			box: rect;			picH: PicHandle;			localItemHit: integer;	begin{$IFC SPEECH}		if CommandEvent(Event) & hasSpeechManager then			begin				SpeakResourceTEXT(28686);				Exit(DoEggAbout);			end;{$ENDC}		StartDLOG(186, theDialog, tempP);		picH := GetPicture(2000);		box := GetDLOGItemBox(theDialog, 3);		box.right := box.left + (picH^^.picFrame.right - picH^^.picFrame.left);		box.bottom := box.top + (picH^^.picFrame.bottom - picH^^.picFrame.top);		SetDialogItem(theDialog, 3, PicItem, Handle(picH), box);		picH := GetPicture(2001);		box := GetDLOGItemBox(theDialog, 4);		box.right := box.left + (picH^^.picFrame.right - picH^^.picFrame.left);		box.bottom := box.top + (picH^^.picFrame.bottom - picH^^.picFrame.top);		SetDialogItem(theDialog, 4, PicItem, Handle(picH), box);				SetButtonTitle(theDialog, 1, 'David');		SetButtonTitle(theDialog, 2, 'Wayne');		myShowDialog(theDialog);		repeat			ModalDialog(nil, localItemHit);		until localItemHit in [1, 2];		EndDLOG(theDialog, tempP);				ReleaseResource(Handle(picH));	end;{-----------------------------------------------------------------------------}	procedure DoAbout;		var			tempP: WindowPtr;			theDialog: DialogPtr;			tempH: Handle;			itemtype: integer;			box: rect;			picH: PicHandle;			localItemHit: integer;			UserItemUProcP, UserItemUProcP2, UserItemUProcP3: UniversalProcPtr;	begin		if OptionEvent(Event) & ControlEvent(Event) then			begin				DoEggAbout;				Exit(DoAbout);			end;	{=== first DLOG ===}		StartDLOG(401, theDialog, tempP);		setrect(box, 0, 0, 0, 0);UserItemUProcP := MyNewUserItemUPP(@aboutinfo);  tempH := Handle(UserItemUProcP);SetDialogItem(theDialog,4, UserItem, tempH, box);{		if WindowInColor(theDialog) then			picH := GetPicture(129)		else			picH := GetPicture(128);		box := GetDLOGItemBox(theDialog, 5);		box.right := box.left + (picH^^.picFrame.right - picH^^.picFrame.left);		box.bottom := box.top + (picH^^.picFrame.bottom - picH^^.picFrame.top);		SetDialogItem(theDialog, 5, PicItem, Handle(picH), box);}		myShowDialog(theDialog);		repeat			ModalDialog(nil, localItemHit);		until localItemHit in [14,1];		MyDisposeUserItemUPP(UserItemUProcP);		DisposeDialog(theDialog);		if localItemHit = 14 then			begin{=== second DLOG ===}				theDialog := GetNewDialog(311, nil, Pointer(-1));				CenterDLOG(theDialog);				genericSetPort(myGetWindowPtrForDialog(theDialog));				box := GetDLOGItemBox(theDialog, 2);				UserItemUProcP2 := MyNewUserItemUPP(@moreinfo);  				tempH := Handle(UserItemUProcP2);				SetDialogItem(theDialog, 2, UserItem, tempH, box);				myShowDialog(theDialog);				repeat					ModalDialog(nil, localItemHit)				until localItemHit in [1, 3];				MyDisposeUserItemUPP(UserItemUProcP2);				DisposeDialog(theDialog);				if localItemHit = 3 then					begin{=== history DLOG ===}						theDialog := GetNewDialog(311, nil, Pointer(-1));						CenterDLOG(theDialog);						genericSetPort(myGetWindowPtrForDialog(theDialog));						GetDialogItem(theDialog, 3, itemtype, tempH, box);						HideControl(ControlHandle(tempH));						UserItemUProcP3 := MyNewUserItemUPP(@credits);  						tempH := Handle(UserItemUProcP3);						box := GetDLOGItemBox(theDialog, 2);						SetDialogItem(theDialog, 2, UserItem, tempH, box);						myShowDialog(theDialog);						repeat							ModalDialog(nil, localItemHit)						until localItemHit = 1;						MyDisposeUserItemUPP(UserItemUProcP3);						DisposeDialog(theDialog);					end;			end;		treeonscreen := false;		genericSetPort(tempP);{FlushEvents(everyevent, 0);  why needed?}		godraw := false;		ReleaseResource(Handle(picH));	end;end.